# Tell Cloud Build to create/use a regional, user-owned logs bucket
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET  # :contentReference[oaicite:0]{index=0}

# Define substitutions for reuse in steps
substitutions:
  _REGION: us-central1
  _PROJECT: fromcavestocars
  _SERVICE_ACCOUNT: 309015187694-compute@developer.gserviceaccount.com

# Artifacts to push: your Flask app image
images:
  - "${_REGION}-docker.pkg.dev/from-caves-to-ca-1746047629693/cloud-run-source-deploy:${SHORT_SHA}"  # :contentReference[oaicite:1]{index=1}

steps:
  # 1) Build the container image with Buildpacks
  - name: "gcr.io/buildpacks/builder"
    args:
      - build
      - --builder=gcr.io/buildpacks/builder
      - --path=.
      - --tag=${_REGION}-docker.pkg.dev/from-caves-to-ca-1746047629693/cloud-run-source-deploy:${SHORT_SHA}  # :contentReference[oaicite:2]{index=2}

  # 2) Deploy the newly built image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud run deploy flask-service \
          --project=${_PROJECT} \
          --region=${_REGION} \
          --image=${_REGION}-docker.pkg.dev/from-caves-to-ca-1746047629693/cloud-run-source-deploy:${SHORT_SHA} \
          --platform=managed \
          --service-account=${_SERVICE_ACCOUNT} \
          --quiet  # :contentReference[oaicite:3]{index=3}

# (Triggers are defined in the Cloud Build UI against your GitHub repo)
